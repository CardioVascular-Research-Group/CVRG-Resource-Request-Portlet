/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jhu.cvrg.portal.resourcerequest.model;

import com.liferay.portal.kernel.annotation.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Transaction service. Represents a row in the &quot;JHU_resource_request_Transaction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.jhu.cvrg.portal.resourcerequest.model.impl.TransactionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.jhu.cvrg.portal.resourcerequest.model.impl.TransactionImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this interface directly. All methods that expect a transaction model instance should use the {@link Transaction} interface instead.
 * </p>
 *
 * @author Chris Jurado
 * @see Transaction
 * @see com.jhu.cvrg.portal.resourcerequest.model.impl.TransactionImpl
 * @see com.jhu.cvrg.portal.resourcerequest.model.impl.TransactionModelImpl
 * @generated
 */
public interface TransactionModel extends BaseModel<Transaction> {
	/**
	 * Gets the primary key of this transaction.
	 *
	 * @return the primary key of this transaction
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this transaction
	 *
	 * @param pk the primary key of this transaction
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the transaction id of this transaction.
	 *
	 * @return the transaction id of this transaction
	 */
	public long getTransactionId();

	/**
	 * Sets the transaction id of this transaction.
	 *
	 * @param transactionId the transaction id of this transaction
	 */
	public void setTransactionId(long transactionId);

	/**
	 * Gets the date of this transaction.
	 *
	 * @return the date of this transaction
	 */
	public Date getDate();

	/**
	 * Sets the date of this transaction.
	 *
	 * @param date the date of this transaction
	 */
	public void setDate(Date date);

	/**
	 * Gets the member id of this transaction.
	 *
	 * @return the member id of this transaction
	 */
	public long getMemberId();

	/**
	 * Sets the member id of this transaction.
	 *
	 * @param memberId the member id of this transaction
	 */
	public void setMemberId(long memberId);

	/**
	 * Gets the action of this transaction.
	 *
	 * @return the action of this transaction
	 */
	@AutoEscape
	public String getAction();

	/**
	 * Sets the action of this transaction.
	 *
	 * @param action the action of this transaction
	 */
	public void setAction(String action);

	/**
	 * Gets the study id of this transaction.
	 *
	 * @return the study id of this transaction
	 */
	public long getStudyId();

	/**
	 * Sets the study id of this transaction.
	 *
	 * @param studyId the study id of this transaction
	 */
	public void setStudyId(long studyId);

	/**
	 * Gets the approver id of this transaction.
	 *
	 * @return the approver id of this transaction
	 */
	public long getApproverId();

	/**
	 * Sets the approver id of this transaction.
	 *
	 * @param approverId the approver id of this transaction
	 */
	public void setApproverId(long approverId);

	/**
	 * Gets the comment of this transaction.
	 *
	 * @return the comment of this transaction
	 */
	@AutoEscape
	public String getComment();

	/**
	 * Sets the comment of this transaction.
	 *
	 * @param comment the comment of this transaction
	 */
	public void setComment(String comment);

	/**
	 * Gets the ip of this transaction.
	 *
	 * @return the ip of this transaction
	 */
	@AutoEscape
	public String getIp();

	/**
	 * Sets the ip of this transaction.
	 *
	 * @param ip the ip of this transaction
	 */
	public void setIp(String ip);

	/**
	 * Gets a copy of this transaction as an escaped model instance by wrapping it with an {@link com.liferay.portal.kernel.bean.AutoEscapeBeanHandler}.
	 *
	 * @return the escaped model instance
	 * @see com.liferay.portal.kernel.bean.AutoEscapeBeanHandler
	 */
	public Transaction toEscapedModel();

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Transaction transaction);

	public int hashCode();

	public String toString();

	public String toXmlString();
}