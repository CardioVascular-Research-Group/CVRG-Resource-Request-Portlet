/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jhu.cvrg.portal.resourcerequest.model.impl;

import com.jhu.cvrg.portal.resourcerequest.model.Request;
import com.jhu.cvrg.portal.resourcerequest.model.RequestModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the Request service. Represents a row in the &quot;JHU_Request&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jhu.cvrg.portal.resourcerequest.model.RequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RequestImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a request model instance should use the {@link com.jhu.cvrg.portal.resourcerequest.model.Request} interface instead.
 * </p>
 *
 * @author Chris Jurado
 * @see RequestImpl
 * @see com.jhu.cvrg.portal.resourcerequest.model.Request
 * @see com.jhu.cvrg.portal.resourcerequest.model.RequestModel
 * @generated
 */
public class RequestModelImpl extends BaseModelImpl<Request>
	implements RequestModel {
	public static final String TABLE_NAME = "JHU_Request";
	public static final Object[][] TABLE_COLUMNS = {
			{ "requestId", new Integer(Types.BIGINT) },
			{ "requesterId", new Integer(Types.BIGINT) },
			{ "approverId", new Integer(Types.BIGINT) },
			{ "approved", new Integer(Types.BOOLEAN) },
			{ "declined", new Integer(Types.BOOLEAN) },
			{ "studyId", new Integer(Types.BIGINT) },
			{ "message", new Integer(Types.VARCHAR) },
			{ "dateSent", new Integer(Types.VARCHAR) },
			{ "dateHandled", new Integer(Types.VARCHAR) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) }
		};
	public static final String TABLE_SQL_CREATE = "create table JHU_Request (requestId LONG not null primary key,requesterId LONG,approverId LONG,approved BOOLEAN,declined BOOLEAN,studyId LONG,message VARCHAR(75) null,dateSent VARCHAR(75) null,dateHandled VARCHAR(75) null,groupId LONG,companyId LONG)";
	public static final String TABLE_SQL_DROP = "drop table JHU_Request";
	public static final String ORDER_BY_JPQL = " ORDER BY request.dateSent ASC";
	public static final String ORDER_BY_SQL = " ORDER BY JHU_Request.dateSent ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jhu.cvrg.portal.resourcerequest.model.Request"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jhu.cvrg.portal.resourcerequest.model.Request"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jhu.cvrg.portal.resourcerequest.model.Request"));

	public RequestModelImpl() {
	}

	public long getPrimaryKey() {
		return _requestId;
	}

	public void setPrimaryKey(long pk) {
		setRequestId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_requestId);
	}

	public long getRequestId() {
		return _requestId;
	}

	public void setRequestId(long requestId) {
		_requestId = requestId;
	}

	public long getRequesterId() {
		return _requesterId;
	}

	public void setRequesterId(long requesterId) {
		_requesterId = requesterId;
	}

	public long getApproverId() {
		return _approverId;
	}

	public void setApproverId(long approverId) {
		_approverId = approverId;
	}

	public boolean getApproved() {
		return _approved;
	}

	public boolean isApproved() {
		return _approved;
	}

	public void setApproved(boolean approved) {
		_approved = approved;
	}

	public boolean getDeclined() {
		return _declined;
	}

	public boolean isDeclined() {
		return _declined;
	}

	public void setDeclined(boolean declined) {
		_declined = declined;
	}

	public long getStudyId() {
		return _studyId;
	}

	public void setStudyId(long studyId) {
		_studyId = studyId;
	}

	public String getMessage() {
		if (_message == null) {
			return StringPool.BLANK;
		}
		else {
			return _message;
		}
	}

	public void setMessage(String message) {
		_message = message;
	}

	public String getDateSent() {
		if (_dateSent == null) {
			return StringPool.BLANK;
		}
		else {
			return _dateSent;
		}
	}

	public void setDateSent(String dateSent) {
		_dateSent = dateSent;
	}

	public String getDateHandled() {
		if (_dateHandled == null) {
			return StringPool.BLANK;
		}
		else {
			return _dateHandled;
		}
	}

	public void setDateHandled(String dateHandled) {
		_dateHandled = dateHandled;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public Request toEscapedModel() {
		if (isEscapedModel()) {
			return (Request)this;
		}
		else {
			return (Request)Proxy.newProxyInstance(Request.class.getClassLoader(),
				new Class[] { Request.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					Request.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		RequestImpl requestImpl = new RequestImpl();

		requestImpl.setRequestId(getRequestId());

		requestImpl.setRequesterId(getRequesterId());

		requestImpl.setApproverId(getApproverId());

		requestImpl.setApproved(getApproved());

		requestImpl.setDeclined(getDeclined());

		requestImpl.setStudyId(getStudyId());

		requestImpl.setMessage(getMessage());

		requestImpl.setDateSent(getDateSent());

		requestImpl.setDateHandled(getDateHandled());

		requestImpl.setGroupId(getGroupId());

		requestImpl.setCompanyId(getCompanyId());

		return requestImpl;
	}

	public int compareTo(Request request) {
		int value = 0;

		value = getDateSent().compareTo(request.getDateSent());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Request request = null;

		try {
			request = (Request)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = request.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{requestId=");
		sb.append(getRequestId());
		sb.append(", requesterId=");
		sb.append(getRequesterId());
		sb.append(", approverId=");
		sb.append(getApproverId());
		sb.append(", approved=");
		sb.append(getApproved());
		sb.append(", declined=");
		sb.append(getDeclined());
		sb.append(", studyId=");
		sb.append(getStudyId());
		sb.append(", message=");
		sb.append(getMessage());
		sb.append(", dateSent=");
		sb.append(getDateSent());
		sb.append(", dateHandled=");
		sb.append(getDateHandled());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.jhu.cvrg.portal.resourcerequest.model.Request");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>requestId</column-name><column-value><![CDATA[");
		sb.append(getRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requesterId</column-name><column-value><![CDATA[");
		sb.append(getRequesterId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approverId</column-name><column-value><![CDATA[");
		sb.append(getApproverId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approved</column-name><column-value><![CDATA[");
		sb.append(getApproved());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>declined</column-name><column-value><![CDATA[");
		sb.append(getDeclined());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>studyId</column-name><column-value><![CDATA[");
		sb.append(getStudyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>message</column-name><column-value><![CDATA[");
		sb.append(getMessage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateSent</column-name><column-value><![CDATA[");
		sb.append(getDateSent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateHandled</column-name><column-value><![CDATA[");
		sb.append(getDateHandled());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _requestId;
	private long _requesterId;
	private long _approverId;
	private boolean _approved;
	private boolean _declined;
	private long _studyId;
	private String _message;
	private String _dateSent;
	private String _dateHandled;
	private long _groupId;
	private long _companyId;
	private transient ExpandoBridge _expandoBridge;
}